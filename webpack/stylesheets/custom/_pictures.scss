// for customer picture
// we want it aligned for the quote
// custom variables are in the common file for the application


.container-customer-lg {
  float: none;
  margin: 0 auto;
  width: $customer_container-lg;
}

.customer-picture-lg {
  height: $customer_picture-lg;
  width: $customer_picture-lg;
}

.customer-picture-xs {
  height: $customer_picture-xs;
  width: $customer_picture-xs;
}

/* mixin
 * for styling the panel with the picture
 * of the customer
 */
@mixin styling-customer($customer_picture, $customer_container) {
  .container-customer {
    float: none;
    margin: 0 auto;
    width: $customer_container;
  }

  .customer-picture {
    height: $customer_picture;
    width: $customer_picture;
  }

  /* allow two lines for name */
  .customer-name {
    height: $customer_name;
  }

  /* add the quotes */
  @include quote_customer($customer_picture, $customer_container)
}

/* mixin
 * for the quotes in addition to the customer panel
 */
@mixin quote_customer($customer_picture, $customer_container) {
  // quote panel with shadow
  .quote-panel {
    width: 100%;
    min-height: $customer_picture + $customer_name + 80px;
    float: right;
    //padding: 10px 20px 10px 20px; //could be deleted if padding in heading, body and footer
    // height 40px for footer to get the arrow
    // toolbox inside footer to be positionned absolute bottom:2px, right:10px
    position: relative;
    border: 1px solid $popover-fallback-border-color;
    border: 1px solid $popover-border-color;
    border-radius: $border-radius-large;
    @include box-shadow(0 5px 10px rgba(0, 0, 0, .2));

    .panel-footer {
      height: 40px;
    }
    // right 0 and make a border top insteab
  }

  // arrow associated
  // arrow needs to be a div directly after the quote panel
  .quote-panel > .arrow {
    &,
    &:after {
      position: absolute;
      display: block;
      width: 0;
      height: 0;
      border-color: transparent;
      border-style: solid;
    }
  }
  .quote-panel > .arrow {
    border-width: $popover-arrow-outer-width;
  }
  .quote-panel > .arrow:after {
    border-width: $popover-arrow-width;
    content: "";
  }

  .quote-panel > .arrow {
    top: 1px+ $customer_picture/2+$customer_padding-top;
    left: -$popover-arrow-outer-width;
    margin-top: -$popover-arrow-outer-width;
    border-left-width: 0;
    border-right-color: $popover-arrow-outer-fallback-color; // IE8 fallback
    border-right-color: $popover-arrow-outer-color;
    &:after {
      content: " ";
      left: 1px;
      bottom: -$popover-arrow-width;
      border-left-width: 0;
      border-right-color: $popover-arrow-color;
    }
  }

  .quote-panel .panel-body {
    display: inline-block;
    padding-top: 0px;
    padding-bottom: 40px;
    width: 100%;
    overflow-x: scroll;
  }

  .quote-panel .panel-footer {
    padding: $panel-body-padding 0 $panel-body-padding 0;
    border-top: 1px $panel-default-border solid;
    background-color: #EEEEEE;
    position: absolute;
    width: 100%;
    height: 40px;
    bottom: 0px;
    right: 0px;
  }
}

/*
 * make the panels of the presentation up to md
 */
// for xs screens
@include styling-customer($customer_picture-xs, $customer_container-xs);
// for sm screens
@media (min-width: $container-sm) {
  @include styling-customer($customer_picture-sm, $customer_container-sm);
}
// for md screens
@media (min-width: $container-md) {
  @include styling-customer($customer_picture-md, $customer_container-md);
}



/* img utilities */
/* for backward compatibility */
.picture-adjusted, .picture-xs, .img-50 {
  height: $picture-xs;
  width: $picture-xs;
  object-fit: cover;
}

.picture-sm {
  height:$picture-sm;
  width: $picture-sm;
  object-fit: cover;
}

.picture-md, .img-80 {
  height:$picture-md;
  width: $picture-md;
  object-fit: cover;
}

.picture-lg {
  height:$picture-lg;
  width: $picture-lg;
  object-fit: cover;
}

// for sm screens
@media (min-width: $screen-sm-min) {
  .picture-adjusted {
    height:$picture-sm;
    width: $picture-sm;
  }
}
// for md screens
@media (min-width: $screen-md-min) {
  .picture-adjusted {
    height:$picture-md;
    width: $picture-md;
  }
}

// for md screens
@media (min-width: $screen-lg-min) {
  .picture-adjusted {
    height:$picture-lg;
    width: $picture-lg;
  }
}